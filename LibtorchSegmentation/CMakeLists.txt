project(DRIVE)
cmake_minimum_required(VERSION 3.5)

set(OpenCV_DIR ~/opencv/opencv-4.1.0/build)
FIND_PACKAGE(OpenCV REQUIRED)
INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIRS})

set(Torch_DIR ~/pytorch/torch/share/cmake/Torch)
find_package(Torch REQUIRED)

# option(LINK_SHARED_ZED "Link with the ZED SDK shared executable" ON)
# if (NOT LINK_SHARED_ZED AND MSVC)
#     message(FATAL_ERROR "LINK_SHARED_ZED OFF : ZED SDK static libraries not available on Windows")
# endif()
# if(COMMAND cmake_policy)
# 	cmake_policy(SET CMP0003 OLD)
# 	cmake_policy(SET CMP0015 OLD)
# endif(COMMAND cmake_policy)
# if (NOT CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE STREQUAL "")
# SET(CMAKE_BUILD_TYPE "RelWithDebInfo")
# endif()
# SET(EXECUTABLE_OUTPUT_PATH ".")
# find_package(ZED 3 REQUIRED)
# find_package(CUDA ${ZED_CUDA_VERSION} EXACT REQUIRED)
# include_directories(${CUDA_INCLUDE_DIRS})
# include_directories(${ZED_INCLUDE_DIRS})
# link_directories(${ZED_LIBRARY_DIR})
# link_directories(${CUDA_LIBRARY_DIRS})
# if (LINK_SHARED_ZED)
#     SET(ZED_LIBS ${ZED_LIBRARIES})
# else()
#     SET(ZED_LIBS ${ZED_STATIC_LIBRARIES})
# endif()

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/src SRC_LIST)
add_executable(drive ${SRC_LIST})
target_link_libraries(drive ${OpenCV_LIBS})
target_link_libraries(drive ${TORCH_LIBRARIES})
# target_link_libraries(drive ${ZED_LIBS})
set_property(TARGET drive PROPERTY CXX_STANDARD 14)
